#!/bin/sh -e

REGISTRY='https://registry-1.docker.io'

CACHE_DIR="$HOME/.cache/d-utils/"
mkdir -p "$CACHE_DIR"

if [ $# -lt 1 ] || [ "$1" = '-h' ]; then
	echo "usage: d-pull [-h] name[@tag] [dir]"
	exit 1
fi

if echo "$1" | grep -q '@'; then
	tag=$(echo "$1" | cut -f2 -d@)
	img=$(echo "$1" | cut -f1 -d@)
else
	img=$1
	tag='latest'
fi
if [ $# -gt 1 ]; then
	dir=$(realpath -m "$2")
else
	dir=$(realpath -m "$1")
fi
if echo "$img" | grep -q -v '/'; then
	img="library/$img"
fi

if [ -e "$dir" ]; then
	echo "$dir already exists"
	exit 1
fi

echo "pulling $img@$tag to $dir"

echo "  fetching token"
auth_url=$(curl -s -I "$REGISTRY/v2/" | grep -i www-authenticate | sed 's/.*realm="\(.*\)",service="\(.*\)".*/\1?service=\2/')
auth_token=$(curl -s "$auth_url&scope=repository:$img:pull" | jq -r '.token')
auth="Authorization: Bearer $auth_token"

# fail if server reports error
curl --head -f --no-progress-meter -o /dev/null -H "$auth" "$REGISTRY/v2/$img/manifests/$tag"

mkdir -p "$dir/rootfs"
echo "$img@$tag" > "$dir/image.txt"

echo "  fetching manifest"
curl -s -H "$auth" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "$REGISTRY/v2/$img/manifests/$tag" -o "$dir/manifest.json"

echo "  fetching config"
config=$(jq -r '.config.digest' "$dir/manifest.json")
curl -s -L -H "$auth" "$REGISTRY/v2/$img/blobs/$config" | jq '.config' > "$dir/config.json"

echo "  fetching layers"
jq -r '.layers|map(.digest)|.[]' "$dir/manifest.json" | while read -r blob; do
	echo "     $blob"
	if [ -e "$CACHE_DIR/$blob" ]; then
		touch "$CACHE_DIR/$blob"
	else
		curl -s -L -H "$auth" "$REGISTRY/v2/$img/blobs/$blob" -o "$CACHE_DIR/$blob"
	fi
	tar -C "$dir/rootfs" -xf "$CACHE_DIR/$blob"
done

echo "  cleanup"
rm "$dir/manifest.json"
find "$CACHE_DIR" -type f -mtime +30 -exec rm -f {} +

echo "successfully pulled $img@$tag to $dir"
